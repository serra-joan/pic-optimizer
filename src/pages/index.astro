---
import Layout from '@layouts/Layout.astro';
import Option from '@/components/Option.astro';
import Upload from '@/assets/icons/Upload.astro';

import { GLOBALS } from '@/constants/globals';
---

<Layout>
	<div class="grid grid-cols-6 gap-4">
        <!-- Dropzone -->
        <div class="col-span-6 lg:col-span-3 mb-8 lg:mb-0">
            <h2 class="text-5xl">Imatge</h2>
            <p>Arrossega i deixa anar la imatge que vols optimitzar</p>

            <div id="dropzone" class="flex items-center justify-center overflow-hidden border border-primary rounded-lg h-64 max-h-80 mt-6 cursor-pointer" id="dropzone">
               <Upload id="iconUpload" class="w-16 h-16" />
               <input type="file" id="fileInput" accept="image/*" class="hidden" />
               <div id="preview"></div>
            </div>

            <div class="w-full mt-6">
               <button  id="btnStartResize" class="border border-primary rounded-lg cursor-pointer px-4 py-2 w-full bg-primary text-secondary hover:bg-secondary hover:text-primary">
                  Iniciar procés
               </button>
            </div>
        </div>

        <!-- Options -->
         <div class="col-span-full lg:col-span-3">
            <h2 class="text-5xl">Opcions</h2>
            <p>Selecciona les opcions d'optimització que vols aplicar a la imatge</p>

            <!-- Desktop -->
            <div class="mt-6">
				<Option 
					device={GLOBALS.DEVICE_DESKTOP}
					fileName="image_desktop" 
					maxWidthOrHeight={2560} 
				/>
            </div>

            <!-- Tablet -->
            <div class="mt-6">
                <Option 
					device={GLOBALS.DEVICE_TABLET}
					fileName="image_tablet"
					maxWidthOrHeight={1200}
				/>
            </div>

            <!-- Mobile -->
            <div class="mt-6">
                <Option
					device={GLOBALS.DEVICE_MOBILE}
					fileName="image_mobile"
					maxWidthOrHeight={750}
				/>
            </div>
         </div>
    </div>
</Layout>

<script type="module">
   import { resizeImage } from '/public/js/compress.js';

   let globalFile;
   const dropzone = document.getElementById('dropzone');
   const fileInput = document.getElementById('fileInput');
   const preview = document.getElementById('preview');
   const btnStartResize = document.getElementById('btnStartResize');

   dropzone.addEventListener('click', () => fileInput.click());

   dropzone.addEventListener('dragover', (e) => {
      e.preventDefault();
      dropzone.classList.add('bg-gray-800');
   });

   dropzone.addEventListener('dragleave', () => {
      dropzone.classList.remove('bg-gray-800');
   });

   dropzone.addEventListener('drop', (e) => {
      e.preventDefault();
      dropzone.classList.remove('bg-gray-800');
      handleFiles(e.dataTransfer.files);
   });

   fileInput.addEventListener('change', (e) => {
      handleFiles(e.target.files);
   });

   btnStartResize.addEventListener('click', function() {
      // Download the images resized
      const options = document.querySelectorAll('.options-container');

      options.forEach(option => {
         const device = option.querySelector('h3').textContent.toLowerCase();
         const fileName = option.querySelector('input[name="inpFileName"]').value || `${device}_image`;
         const maxWidthOrHeight = parseInt(option.querySelector('input[name="inpWidth"]').value, 10) || 0;

         const optionsParams = {
            device,
            fileName,
            maxWidthOrHeight
         };

         // Init process
         if (globalFile && maxWidthOrHeight > 0) {
            resizeImage(globalFile, optionsParams);
         }
      });
   })

   function handleFiles(files) {
      if (!files.length) return;
      const file = files[0];
      if (!file.type.startsWith('image/')) return;

      const reader = new FileReader();

      // Set preview
      reader.onload = (e) => {
         const iconUpload = document.getElementById('iconUpload');
         iconUpload.classList.add('hidden'); // Hide the upload icon
         preview.classList.add('w-full', 'h-full')
         preview.innerHTML = `<img src="${e.target.result}" class="w-full h-full object-center object-contain" />`;

         // Set file names
         const options = document.querySelectorAll('.options-container input[name="inpFileName"]');
         options.forEach(option => {
            const device = option.closest('.options-container').dataset.device;
            option.value = file.name.split('.')[0] + `_${device}` || `image_${device || ''}`;
         });
      };
      reader.readAsDataURL(file);

      globalFile = file; // Save the file for later use
   }
</script>
